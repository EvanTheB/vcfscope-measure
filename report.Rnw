%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  
%  KCCG WGS Validation Reporter -- Report generator
%  
%  Usage: 
%    Rscript --vanilla -e "library(knitr); knit('report.Rnw', output = 'report.tex')"
%  
%
%  Mark Pinese, 2015
%  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass[10pt,a4paper]{article}
\usepackage{geometry}
\usepackage{amsmath}
\usepackage{booktabs}
\usepackage[usenames,dvipsnames,svgnames,table]{xcolor}
\usepackage{url}

\usepackage{fancyhdr}
\setlength{\headheight}{15.2pt}
\pagestyle{fancyplain}
\usepackage{lastpage}

\begin{document}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PREPARATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% LOAD PRECOMPUTED RESULTS
%--------------------------------------------------------------------
<<load-results, cache=FALSE, echo=FALSE>>=
load("report_data.rda")
@


% LIBRARIES
%--------------------------------------------------------------------
<<load-libs, cache=FALSE, echo=FALSE>>=
suppressPackageStartupMessages(library(VariantAnnotation))
suppressPackageStartupMessages(library(GenomicRanges))
suppressPackageStartupMessages(library(BSgenome))

suppressPackageStartupMessages(library(Rcpp))
suppressPackageStartupMessages(library(inline))

suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(xtable))
@


% HELPER FUNCTIONS
%--------------------------------------------------------------------
<<load-funcs, cache=FALSE, echo=FALSE>>=
source("report_functions.R")
@


% KNITR SETUP
%--------------------------------------------------------------------
<<setup, cache=FALSE, echo=FALSE>>=
library(knitr)
options(
	tikzDocumentDeclaration = "\\documentclass[11pt]{article}",
	tikzLatexPackages = c(
		getOption("tikzLatexPackages"),
		"\\usepackage{amsmath}"),
	tikzMetricsDictionary="tikzMetrics"
)
opts_chunk$set(
	echo = FALSE, results = 'markup', message = DEBUG, warning = DEBUG, error = DEBUG, 
	fig.keep = 'high', fig.align = 'center', fig.width = 5, fig.height = 3.5, dpi = 144, 
	cache = FALSE, cache.lazy = FALSE)
opts_knit$set(progress = TRUE, verbose = TRUE)
options(warn = 1)
@



% REPORT COMPUTATIONS
%--------------------------------------------------------------------
<<report-calcs, cache=FALSE, echo=FALSE>>=
report = list()

report$gentime = date()

report$specifications = list(
	measure = "QUAL",
	cutoff = 200,
	snv.het.min.sens = 0.90,
	snv.het.min.spec = 0.80,
	indelsubst.het.min.sens = 0.70)

# temp = perf.snv$all$QUAL
# temp$sens = temp$tp / (temp$tp + temp$fn)
# temp$spec = temp$tn / (temp$tn + temp$fp)
# library(reshape2)
# temp2 = melt(temp, measure.vars = c("sens", "spec"))
# library(ggplot2)
# ggplot(temp2, aes(x = cutoff, y = value, colour = variable)) + geom_path() + coord_cartesian(ylim = c(0.8, 1), xlim = c(0, 10))

# temp = perf.indelsubst$zyg$QUAL$RRvsRA
# temp$sens = temp$tp / (temp$tp + temp$fn)
# library(reshape2)
# temp2 = melt(temp, measure.vars = c("sens", "fp"))
# library(ggplot2)
# ggplot(temp2, aes(x = cutoff, y = value, colour = variable)) + geom_path()

snv.het.perf = calcSensSpecAtCutoff(perf.snv$zyg[[report$specifications$measure]]$RRvsRA, report$specifications$cutoff)
indelsubst.het.perf = calcSensSpecAtCutoff(perf.indelsubst$zyg[[report$specifications$measure]]$RRvsRA, report$specifications$cutoff)
snv.hom.perf = calcSensSpecAtCutoff(perf.snv$zyg[[report$specifications$measure]]$RRvsAA, report$specifications$cutoff)
indelsubst.hom.perf = calcSensSpecAtCutoff(perf.indelsubst$zyg[[report$specifications$measure]]$RRvsAA, report$specifications$cutoff)

report$snv.het.sens.value = snv.het.perf$sens
report$snv.het.spec.value = snv.het.perf$spec
report$indelsubst.het.sens.value = indelsubst.het.perf$sens

report$snv.het.sens.pass = report$snv.het.sens.value >= report$specifications$snv.het.min.sens
report$snv.het.spec.pass = report$snv.het.spec.value >= report$specifications$snv.het.min.spec
report$indelsubst.het.sens.pass = report$indelsubst.het.sens.value >= report$specifications$indelsubst.het.min.sens

report$overall.pass = report$snv.het.sens.pass & report$snv.het.spec.pass & report$indelsubst.het.sens.pass

report$snv.het.sens.call = ifelse(report$snv.het.sens.pass, "Pass", "\\textcolor{red}{\\textbf{FAIL}}")
report$snv.het.spec.call = ifelse(report$snv.het.spec.pass, "Pass", "\\textcolor{red}{\\textbf{FAIL}}")
report$indelsubst.het.sens.call = ifelse(report$indelsubst.het.sens.pass, "Pass", "\\textcolor{red}{\\textbf{FAIL}}")

report$overall.call = ifelse(report$overall.pass, "\\textcolor{blue}{PASS}", "\\textcolor{red}{\\textbf{FAIL}}")
@



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% REPORT STARTS HERE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}

\fancyhf{}
\lhead{WGS Validation Report (v\texttt{\Sexpr{versions$script}}): \texttt{\Sexpr{texquote(calls.sampleid)}}}
\rhead{Page \thepage\ of \pageref{LastPage}}

\let\endtitlepage\relax
\begin{titlepage}
\begin{flushleft}
\LARGE{WGS Validation Report: \texttt{\Sexpr{texquote(calls.sampleid)}}}
\HRule
\end{flushleft}
\end{titlepage}

\section{Summary}
Sample ID: \texttt{\Sexpr{texquote(calls.sampleid)}} \\
Input VCF: \texttt{\url{\Sexpr{path.input}}} \\
Report version: \texttt{\Sexpr{versions$script}}
Report time: \texttt{\Sexpr{texquote(report$gentime)}} \\

<<summary-table,results='asis'>>=
summary.table = xtable(data.frame(
	Criterion = c("Het SNV sensitivity", "Het SNV specificity", "Het Indel sensitivity"),
	Threshold = c(sprintf("%s $> %d$", report$specifications$measure, report$specifications$cutoff), sprintf("%s $> %d$", report$specifications$measure, report$specifications$cutoff), sprintf("%s $> %d$", report$specifications$measure, report$specifications$cutoff)),
	"Measured" = c(report$snv.het.sens.value, report$snv.het.spec.value, report$indelsubst.het.sens.value),
	"Reference Range" = c(sprintf("$> %.2f$", report$specifications$snv.het.min.sens), sprintf("$> %.2f$", report$specifications$snv.het.min.spec), sprintf("$> %.2f", report$specifications$indelsubst.het.min.sens)),
	"Call" = c(report$snv.het.sens.call, report$snv.het.spec.call, report$indelsubst.het.sens.call)), digits = 4)
print(summary.table, sanitize.text.function = function(x) x, include.rownames = FALSE)
@

OVERALL RESULT: \Sexpr{report$overall.call} \\

<<summary-plots, out.width='.45\\linewidth', out.height='.4\\linewidth', fig.show='hold'>>=
plotROC(perf.snv$zyg[[report$specifications$measure]][c("RRvsAA", "RRvsRA")]) + 
	ggtitle("SNV") + 
	labs(colour = "Zygosity") + 
	scale_colour_brewer(palette = "Set1") +
	coord_cartesian(xlim = c(-1e-7, 2.5e-6)) + 
	geom_point(aes(x = 1 - snv.het.perf$spec, y = snv.het.perf$sens, size = 4, colour = "RRvsRA")) + 
	geom_point(aes(x = 1 - snv.hom.perf$spec, y = snv.hom.perf$sens, size = 4, colour = "RRvsAA")) + 
	guides(size = FALSE) + 
	geom_vline(xintercept = 1 - report$specifications$snv.het.min.spec, lty = "dashed") + 
	geom_hline(yintercept = report$specifications$snv.het.min.sens, lty = "dashed") + 
	theme_bw()

plotROC(perf.indelsubst$zyg[[report$specifications$measure]][c("RRvsAA", "RRvsRA")], type.fp = "count") + 
	ggtitle("Indel") + 
	labs(colour = "Zygosity") + 
	scale_colour_brewer(palette = "Set1") +
	geom_point(aes(x = indelsubst.het.perf$nfp, y = indelsubst.het.perf$sens, size = 4, colour = "RRvsRA")) + 
	geom_point(aes(x = indelsubst.hom.perf$nfp, y = indelsubst.hom.perf$sens, size = 4, colour = "RRvsAA")) + 
	guides(size = FALSE) + 
	geom_hline(yintercept = report$specifications$indelsubst.het.min.sens, lty = "dashed") + 
	theme_bw()
@


% DATA AND SOFTWARE VERSIONS
%--------------------------------------------------------------------
\clearpage
\section{Versions}
\begin{itemize}
\item Input VCF: \texttt{\url{\Sexpr{path.input}}}
\item Sample ID: \texttt{\Sexpr{texquote(calls.sampleid)}}
\item Validation script: \begin{itemize} 
	\item version \texttt{\Sexpr{versions$script}}
	\item branch \texttt{\Sexpr{versions$branch}}
	\item commit \texttt{\Sexpr{versions$commit}}
	\end{itemize}
\item R: \texttt{\Sexpr{R.version$version.string}} (\texttt{\Sexpr{texquote(R.version$platform)}})
\item Execution host: \texttt{\Sexpr{texquote(versions$host)}}
\item Report generated at: \Sexpr{texquote(report$gentime)}
\item Data: \begin{itemize}
	\item GiaB BED: \texttt{\url{\Sexpr{path.gold_regions}}} (MD5 \texttt{\Sexpr{texquote(fileMD5(path.gold_regions))}})
	\item GiaB VCF: \texttt{\url{\Sexpr{path.gold}}} (MD5 \texttt{\Sexpr{texquote(fileMD5(path.gold))}})
	\item Sequence masks: \texttt{\url{\Sexpr{path.mask_regions_prefix}}} \begin{itemize}
		\item Ambiguous: \texttt{ambiguous.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.mask_regions_prefix, "ambiguous.bed.gz", sep = "")))}})
		\item Low complexity: \texttt{mdust.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.mask_regions_prefix, "mdust.bed.gz", sep = "")))}})
		\item Repetitive: \texttt{repetitive.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.mask_regions_prefix, "repetitive.bed.gz", sep = "")))}})
	\end{itemize}
	\item Functional regions: \texttt{\url{\Sexpr{path.function_regions_prefix}}} \begin{itemize}
		\item Exonic coding: \texttt{exonic\_coding.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "exonic_coding.bed.gz", sep = "")))}})
		\item Exonic non-coding: \texttt{exonic\_utr.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "exonic_utr.bed.gz", sep = "")))}})
		\item Genic: \texttt{genes.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "genes.bed.gz", sep = "")))}})
		\item Intergenic: \texttt{intergenic.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "intergenic.bed.gz", sep = "")))}})
		\item Intronic: \texttt{intronic.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "intronic.bed.gz", sep = "")))}})
		\item Splice sites: \texttt{splice.bed.gz} (MD5 \texttt{\Sexpr{texquote(fileMD5(paste(path.function_regions_prefix, "splice.bed.gz", sep = "")))}})
	\end{itemize}
	\item Genome: \texttt{\Sexpr{texquote(genome)}} (\texttt{\Sexpr{packageVersion(genome)}})
	\end{itemize}
\end{itemize}


% EXTENDED REPORT
%--------------------------------------------------------------------
<<child = if (extendedflag) 'report_extended.Rnw'>>=
@


% DEBUG REPORTING
%--------------------------------------------------------------------
<<child = if (DEBUG) 'report_debug.Rnw'>>=
@


\end{document}
