%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  
%  KCCG WGS Validation Reporter -- Report generator
%  
%  Usage: 
%    Rscript --vanilla -e "library(knitr); knit('report.Rnw', output = 'report.tex')"
%  
%
%  Mark Pinese, 2015
%  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\documentclass{article}
\usepackage{geometry}
\usepackage{amsmath}
%\usepackage{lscape}
\usepackage{url}
\geometry{verbose,tmargin=2.5cm,bmargin=2.5cm,lmargin=2.5cm,rmargin=2.5cm}

\begin{document}


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% PREPARATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


% LOAD PRECOMPUTED RESULTS
%--------------------------------------------------------------------
<<load-results, cache=FALSE, echo=FALSE>>=
load("report_data.rda")
@


% LIBRARIES
%--------------------------------------------------------------------
<<load-libs, cache=FALSE, echo=FALSE>>=
suppressPackageStartupMessages(library(VariantAnnotation))
suppressPackageStartupMessages(library(GenomicRanges))
suppressPackageStartupMessages(library(BSgenome))

suppressPackageStartupMessages(library(inline))
suppressPackageStartupMessages(library(Rcpp))

suppressPackageStartupMessages(library(ggplot2))
@


% HELPER FUNCTIONS
%--------------------------------------------------------------------
<<load-funcs, cache=FALSE, echo=FALSE>>=
source("report_functions.R")
@


% KNITR SETUP
%--------------------------------------------------------------------
<<setup, cache=FALSE, echo=FALSE>>=
library(knitr)
options(
	tikzDocumentDeclaration = "\\documentclass[11pt]{article}",
	tikzLatexPackages = c(
		getOption("tikzLatexPackages"),
		"\\usepackage{amsmath}"),
	tikzMetricsDictionary="tikzMetrics"
)
opts_chunk$set(
	echo = FALSE, results = 'markup', message = DEBUG, warning = DEBUG, error = DEBUG, 
	fig.keep = 'high', fig.align = 'center', fig.width = 5, fig.height = 4, 
	cache = FALSE, cache.lazy = FALSE)
opts_knit$set(progress = TRUE, verbose = TRUE)
options(warn = 1)
@




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% REPORT STARTS HERE
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\title{WGS Validation Report}
\date{\today}
\maketitle


% DEBUG REPORTING
%--------------------------------------------------------------------
<<child = if (DEBUG) 'report_debug.Rnw'>>=
@


% DATA AND SOFTWARE VERSIONS
%--------------------------------------------------------------------
\section{Versions}
\begin{itemize}
\item Input VCF: \texttt{\url{\Sexpr{path.input}}}
\item Sample ID: \texttt{\Sexpr{texquote(data.sampleid)}}
% TODO: the following git business worked great when report.Rnw was in 
% the repo root, but now is broken.  Come up with another approach.
\item Validation script: branch \texttt{\Sexpr{versions$branch}}, commit \texttt{\Sexpr{versions$commit}}
\item R version: \texttt{\Sexpr{R.version$version.string}} (\texttt{\Sexpr{texquote(R.version$platform)}})
\item Execution host: \texttt{\Sexpr{texquote(versions$host)}}
\item Validation report generated at: \Sexpr{texquote(date())}
\item Data: \begin{itemize}
	\item NA12878 gold standard valid call regions: \texttt{\url{\Sexpr{path.gold_regions}}} (MD5 \texttt{\Sexpr{texquote(fileMD5(path.gold_regions))}})
	\item Genome: \texttt{\Sexpr{texquote(genome)}} (\texttt{\Sexpr{packageVersion(genome)}})
	% TODO: NA12878 gold standard calls, various beds
	\end{itemize}
\end{itemize}
% TODO:
% Machine ID			-----
% Operator ID				|
% Library ID				|
% Sample ID					|-- Integrate all into IUS or similar?
%   Sample (eg NA12878)		|
%   Batch					|
% Dates?				-----


% VALIDATION REPORT PASS/FAIL SUMMARY
%--------------------------------------------------------------------
% TODO: 
%   Overall pass-fail call, broken down into major sections

<<passfail-summary>>=
@


% SCORE PERFORMANCE: THRESHOLD SELECTION
%--------------------------------------------------------------------
\section{Score Threshold Selection}
<<score-plots>>=
temp.allsnvdata = createROCData(perf.snv$all)$data
colnames(temp.allsnvdata)[colnames(temp.allsnvdata) == "group1"] = "Score"
colnames(temp.allsnvdata)[colnames(temp.allsnvdata) == "group2"] = "AndFILTER"
temp.allsnvdata[,"AndFILTER"] = ordered(c("No", "Yes")[grepl("FILTER", temp.allsnvdata[,"Score"])+1])
temp.allsnvdata[,"Score"] = factor(gsub(":FILTER", "", temp.allsnvdata[,"Score"]))
ggplot(temp.allsnvdata, aes(x = FP, y = TP, colour = Score, linetype = AndFILTER)) + geom_path() + ylim(0, 1) + ylab("True positive rate") + xlim(0, 1) + xlab("False positive rate") + geom_abline(intercept = 0, slope = 1, linetype = "dotted", alpha = 0.5) + coord_fixed() + theme_bw() + ggtitle("SNV Receiver Operating Characteristic: Overview")
ggplot(temp.allsnvdata, aes(x = FP, y = TP, colour = Score, linetype = AndFILTER)) + geom_path() + ylim(0, 1) + ylab("True positive rate") + xlim(0, 1) + xlab("False positive rate") + geom_abline(intercept = 0, slope = 1, linetype = "dotted", alpha = 0.5) + coord_cartesian(xlim = c(0, 5e-6)) + theme_bw() + ggtitle("SNV Receiver Operating Characteristic: Detail")

temp.allsnvdata = createROCData(perf.snv$all, type.fp = "count")$data
colnames(temp.allsnvdata)[colnames(temp.allsnvdata) == "group1"] = "Score"
colnames(temp.allsnvdata)[colnames(temp.allsnvdata) == "group2"] = "AndFILTER"
temp.allsnvdata[,"AndFILTER"] = ordered(c("No", "Yes")[grepl("FILTER", temp.allsnvdata[,"Score"])+1])
temp.allsnvdata[,"Score"] = factor(gsub(":FILTER", "", temp.allsnvdata[,"Score"]))
ggplot(temp.allsnvdata, aes(x = FP, y = TP, colour = Score, linetype = AndFILTER)) + geom_path() + ylim(0, 1) + ylab("True positive rate") + xlim(0, 150) + xlab("False positive count") + theme_bw() + ggtitle("SNV Receiver Operating Characteristic: Detail")

temp.allindelsubstdata = createROCData(perf.indelsubst$all, type.fp = "count")$data
colnames(temp.allindelsubstdata)[colnames(temp.allindelsubstdata) == "group1"] = "Score"
colnames(temp.allindelsubstdata)[colnames(temp.allindelsubstdata) == "group2"] = "AndFILTER"
temp.allindelsubstdata[,"AndFILTER"] = ordered(c("No", "Yes")[grepl("FILTER", temp.allindelsubstdata[,"Score"])+1])
temp.allindelsubstdata[,"Score"] = factor(gsub(":FILTER", "", temp.allindelsubstdata[,"Score"]))
ggplot(temp.allindelsubstdata, aes(x = FP, y = TP, colour = Score, linetype = AndFILTER)) + geom_path() + ylim(0, 1) + ylab("True positive rate") + xlim(0, 150) + xlab("False positive count") + theme_bw() + ggtitle("Indel and Substitution Receiver Operating Characteristic: Detail")


plotROC(perf.snv$all) + ggtitle("SNV Receiver Operating Characteristic: Detail") + coord_cartesian(xlim = c(0, 5e-6)) + theme_bw()
plotROC(perf.snv$zyg) + ggtitle("SNV Receiver Operating Characteristic: Overview") + theme_bw()
plotROC(perf.snv$zyg) + ggtitle("SNV Receiver Operating Characteristic: Detail") + coord_cartesian(xlim = c(0, 5e-6)) + theme_bw()
plotROC(perf.snv$mask) + ggtitle("SNV Receiver Operating Characteristic: Overview") + theme_bw()
plotROC(perf.snv$mask) + ggtitle("SNV Receiver Operating Characteristic: Detail") + coord_cartesian(xlim = c(0, 5e-6)) + theme_bw()

plotROC(perf.snv$all, type.fp = "count") + ggtitle("SNV Receiver Operating Characteristic: Detail") + xlim(0, 150) + theme_bw()
plotROC(perf.snv$zyg, type.fp = "count") + ggtitle("SNV Receiver Operating Characteristic: Detail") + xlim(0, 150) + theme_bw()
plotROC(perf.snv$mask, type.fp = "count") + ggtitle("SNV Receiver Operating Characteristic: Detail") + xlim(0, 150) + theme_bw()

plotROC(perf.indelsubst$all, type.fp = "count") + ggtitle("Indel and Substitution Receiver Operating Characteristic") + xlim(0, 150) + theme_bw()
plotROC(perf.indelsubst$zyg, type.fp = "count") + ggtitle("Indel and Substitution Receiver Operating Characteristic") + xlim(0, 150) + theme_bw()
plotROC(perf.indelsubst$mask, type.fp = "count") + ggtitle("Indel and Substitution Receiver Operating Characteristic") + xlim(0, 150) + theme_bw()
@

% SNV PERFORMANCE
%--------------------------------------------------------------------
% \section{SNV Performance}
% <<snv-plots>>=
% snv.pred.list = list(VQSLOD = snv.perf.all.VQSLOD, QUAL = snv.perf.all.QUAL, GQ = snv.perf.all.GQ, DP = snv.perf.all.DP, .FILTER = snv.perf.all.FILTER,
% 	VQSLOD.FILTER = snv.perf.all.VQSLOD_FILTER, QUAL.FILTER = snv.perf.all.QUAL_FILTER, GQ.FILTER = snv.perf.all.GQ_FILTER, DP.FILTER = snv.perf.all.DP_FILTER)
% plotROC(snv.pred.list) + ggtitle("SNV Receiver Operating Characteristic: Overview") + theme_bw()
% plotROC(snv.pred.list) + ggtitle("SNV Receiver Operating Characteristic: Detail") + coord_cartesian(xlim = c(0, 2.5e-6)) + theme_bw()
% #plotDET(snv.pred.list) + ggtitle("SNV Detection-Error Tradeoff") + theme_bw()
% #plotLR(snv.pred.list) + ggtitle("SNV Diagnostic Likelihood Ratios") + scale_x_log10(limits = c(1e-3, 1)) + scale_y_log10(limits = c(1e5, 1e8)) + theme_bw()
% #plotTPRFNR(snv.pred.list) + ggtitle("SNV TPR and FNR") + theme_bw()
% @




% \section{Graph vomit}
% <<all-plots, fig.show='hold', fig.align='center', out.width='4cm', out.height='4cm', dpi = 144>>=
% plotROC(snv.perf.zyg.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs true zygosity") + theme_bw()
% plotROC(snv.perf.zyg.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs true zygosity") + theme_bw()
% plotROC(snv.perf.somy.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs true somy") + theme_bw()
% plotROC(snv.perf.somy.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs true somy") + theme_bw()
% plotROC(snv.perf.function.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs functional role") + theme_bw()
% plotROC(snv.perf.function.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs functional role") + theme_bw()
% plotROC(snv.perf.mask.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs masking status") + theme_bw()
% plotROC(snv.perf.mask.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("SNV Receiver Operating Characteristic: VQSLOD vs masking status") + theme_bw()

% plotROC(all.perf.zyg.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Receiver Operating Characteristic: VQSLOD vs true zygosity") + theme_bw()
% plotROC(all.perf.zyg.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Receiver Operating Characteristic: VQSLOD vs true zygosity") + theme_bw()
% plotROC(all.perf.somy.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Operating Characteristic: VQSLOD vs true somy") + theme_bw()
% plotROC(all.perf.somy.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Operating Characteristic: VQSLOD vs true somy") + theme_bw()
% plotROC(all.perf.function.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Operating Characteristic: VQSLOD vs functional role") + theme_bw()
% plotROC(all.perf.function.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Operating Characteristic: VQSLOD vs functional role") + theme_bw()
% plotROC(all.perf.mask.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Operating Characteristic: VQSLOD vs masking status") + theme_bw()
% plotROC(all.perf.mask.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Operating Characteristic: VQSLOD vs masking status") + theme_bw()
% all.perf.muttype.VQSLOD = list(SNV = all.perf.muttype.VQSLOD$SNV, Del = all.perf.muttype.VQSLOD$Del, Ins = all.perf.muttype.VQSLOD$Ins)
% plotROC(all.perf.muttype.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Operating Characteristic: VQSLOD vs mutation type") + theme_bw()
% plotROC(all.perf.muttype.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Operating Characteristic: VQSLOD vs mutation type") + theme_bw()
% plotROC(all.perf.mutsize.VQSLOD, type.fpr = "count", type.tpr = "rate") + ggtitle("All Type Operating Characteristic: VQSLOD vs mutation size") + theme_bw()
% plotROC(all.perf.mutsize.VQSLOD, type.fpr = "count", type.tpr = "count") + ggtitle("All Type Operating Characteristic: VQSLOD vs mutation size") + theme_bw()
% @



% DETAILED SUMMARY AND SIGN-OFF
%--------------------------------------------------------------------
% TODO: 
%   Data version
%   Validator version
%   Overall pass-fail call, broken down into major sections
%   Sign-off


\end{document}


% TODO: Add to report:
%  * Region summary:
%    A Genome
%    B GIAB valid regions
%    C vcfeval excluded
%    D Total evaluable regions (D = (A^B) - C)
%    E Hard mask callable regions
%    E Venn D^E, D-E, E-D
